# Azure DevOps Pipeline for Playwright Cucumber App Service Deployment
# File: azure-pipelines.yml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Environment Variables
  HEADLESS: 'true'
  CI: 'true'
  NODE_ENV: 'production'
  PLAYWRIGHT_BROWSERS_PATH: '/home/site/wwwroot/browsers'
  TEST_TIMEOUT: '30000'
  BROWSER: 'chromium'
  
  # Azure DevOps Specific - CONFIGURE THESE IN YOUR PIPELINE
  azureSubscription: 'your-azure-service-connection'  # Update this
  appServiceName: 'your-app-service-name'             # Update this
  resourceGroupName: 'your-resource-group'           # Update this
  
  # Build Variables
  buildConfiguration: 'Release'
  nodeVersion: '18.x'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: BuildJob
    displayName: 'Build Application'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'
    
    - script: |
        npm ci
        npx playwright install --with-deps
      displayName: 'Install dependencies'
    
    - script: |
        npm test
      displayName: 'Run tests'
      env:
        HEADLESS: $(HEADLESS)
        CI: $(CI)
        NODE_ENV: $(NODE_ENV)
    
    - task: PublishTestResults@2
      inputs:
        testResultsFiles: 'test-results/cucumber-report.json'
        testRunTitle: 'Playwright Cucumber Tests'
    
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy'
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: '$(azureSubscription)'
              appType: 'webAppLinux'
              appName: '$(appServiceName)'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|18-lts'
              startUpCommand: './azure-startup.sh'
              appSettings: |
                -HEADLESS $(HEADLESS)
                -CI $(CI)
                -NODE_ENV $(NODE_ENV)
                -PLAYWRIGHT_BROWSERS_PATH $(PLAYWRIGHT_BROWSERS_PATH)
                -TEST_TIMEOUT $(TEST_TIMEOUT)
                -BROWSER $(BROWSER)
